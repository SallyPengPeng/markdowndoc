{ 
  /* https://www.typescriptlang.org/tsconfig */

  /* 文件选项 */
  // "files": ["src/a.ts"],  /* default: false 需要编译的文件, default: false */
  // "include": ["src/*"],  /* 需要编译的文件或目录，仅src代表src目录下所有文件，src/*代表仅src一级目录下的文件 */
  // "exclude": ["src/lib"], /* 指定不需要编译的目录或文件 */
  // "extends": "./configs/base", /* 导入基础的配置 */

  /* 编译选项 */
  "compilerOptions": {
    /* Basic Options */
    // "incremental": true,   /* 编译器第一次编译后存储编译信息文件，后续编译使用增量编译，提高速度 */
    // "tsBuildInfoFile": "./buildFile", /* 增量编译文件的存储位置 */
    // "diagnostics": true,   /* 打印编译日志文件 */
    "target": "es5",          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
    "module": "commonjs",     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    // "outFile": "./app.js", /* 将多个相互依赖的文件生成一个文件，可以用在AMD模块中 */
    // "lib": [],             /* Specify library files to be included in the compilation. */
    // "allowJs": true,       /* Allow JavaScript files to be imported inside your project */
    // "checkJs": true,       /* Report errors in .js files. */
    // "outDir": "./",       /* 指定输出目录 */
    // "rootDir": "./",      /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */

    // "declaration": true,            /* Generates corresponding '.d.ts' file. */
    // "declarationDir": "./types",    /* 指定声明文件的输出路径 */
    // "emitDeclarationOnly": true,    /* 只生成声明文件 */
    // "sourceMap": true,          /* Generates corresponding '.map' file. */
    // "declarationMap": true,     /* Generates a sourcemap for each corresponding '.d.ts' file. */
    // "inlineSourceMap": true,    /* 生成目标文件的inline sourceMap */
    // "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */

    // "composite": true,                     /* Enable project compilation */
    // "removeComments": true,                /* Do not emit comments to output. */
    // "noEmit": true,                        /* Do not emit outputs. */
    // "noEmitOnError": true,                 /* 当发生错误时，Do not emit outputs. */
    // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,              /* 不允许把null、undefined 赋值给其他类型变量. */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks，只会提示，不会影响编译 */
    // "noUnusedLocals": true,                /* Report errors on unused locals. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    // "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* 将多个目录放在一个虚拟目录下，用于运行时 */
    // "typeRoots": [],                       /* List of folders to include type definitions from. 默认node_modules/@types */
    // "types": [],                           /* 指定需要加载的声明文件包 */
    // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    // "esModuleInterop": true,               /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
  }
}
